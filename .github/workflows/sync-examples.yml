name: Sync Examples

on:
  push:
    branches: [main]
    paths:
      - 'examples/**'
      - 'docs/media/examples/**'
      - '.github/workflows/sync-examples.yml'
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          path: source
          lfs: true # Enable LFS for the checkout

      - name: Install Git LFS for source
        run: |
          sudo apt-get install -y git-lfs
          git lfs install

      - name: Setup target repository
        run: |
          # Initialize a new repository
          mkdir -p target
          cd target
          git init
          git remote add origin https://${{ secrets.EXAMPLES_PAT }}@github.com/sqlrooms/examples.git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # Create an initial empty commit and check out main branch
          git checkout -b main

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Sync examples and media
        run: |
          # Create target directories
          mkdir -p target/media/examples

          # Copy examples directory
          cp -r source/examples/* target/

          # Copy images from docs/media/examples if it exists
          if [ -d "source/docs/media/examples" ]; then
            cp -r source/docs/media/examples/* target/media/examples/
          fi

          # Copy examples documentation as README.md
          cp source/docs/examples.md target/README.md
          # Remove only the frontmatter from README
          sed -i.bak '1{/---/{:a N;/\n---/!ba};d}' target/README.md
          rm target/README.md.bak

          # Get version from lerna.json
          VERSION=$(jq -r '.version' source/lerna.json)

          # Update package.json files
          find target -name "package.json" -type f | while read -r file; do
            # Replace all "@sqlrooms/*": "workspace:*" with "@sqlrooms/*": "$VERSION"
            jq --arg version "$VERSION" \
              '(.dependencies | with_entries(
                if .key | startswith("@sqlrooms/")
                then .value = $version
                else .
                end
              )) as $deps
              | .dependencies = $deps' "$file" > temp.json
            mv temp.json "$file"
          done

          # Setup git config and commit changes
          cd target

          # Add all changes
          git add .

          # Commit changes
          git commit -m "Sync examples from main repo (${GITHUB_SHA})"

          # Force push to overwrite git history
          git push -f origin main
